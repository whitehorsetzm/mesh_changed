/* include/GR_config.h.  Generated by configure.  */
#ifndef CONFIG_H_GRUMMP
#define CONFIG_H_GRUMMP

/* Whether logging is done at all is controlled by a configure-time
   option (--enable-logging).  By default, this is enabled at
   configure-time.*/
#ifndef SUMAA_LOG
#define SUMAA_LOG 1
#endif

/* Define to enable support for ITAPS */
/* #undef ITAPS */

/* Define if the standard C headers are missing */
#define STDC_HEADERS 1

/* Define if fcntl.h exists */
#define HAVE_FCNTL_H 1

/* Define if limits.h exists */
#define HAVE_LIMITS_H 1

/* Define if unistd.h exists */
/* #undef HAVE_UNISTD_H */

#ifndef __cplusplus
/* Define to empty if the const keyword is broken in the C compiler */
/* #undef const */
#endif

/* Define if the bool type is known to your compiler */
/* #undef HAVE_bool_c */
#define HAVE_bool_cxx 1

/* Define to unsigned if sys/types.h doesn't define it */
/* #undef size_t */

/* Define to unsigned if sys/types.h doesn't define it */
/* #undef mode_t */

/* Define if vprintf exists */
#define HAVE_VPRINTF 1

/* Define if strtod exists */
#define HAVE_STRTOD 1

/* Define if strtol exists */
#define HAVE_STRTOL 1

/* Define if snprintf exists */
#define HAVE_SNPRINTF 1

/* Define if drand48 exists */
#define HAVE_DRAND48 1

/* Define if atexit exists */
#define HAVE_ATEXIT 1

/* Define if on_exit exists */
#define HAVE_ON_EXIT 1

/* Define to disable assertions */
#define NDEBUG 1

/* #undef SUNOS4 */
/* #undef SOLARIS2 */
#define LINUX_GNU 1
/* #undef LINUX */
/* #undef IRIX5 */
/* #undef IRIX6 */
/* #undef HPUX10 */
/* #undef OSF4 */

#ifdef NDEBUG
#define MESSAGE_LEVEL_STDOUT 1
#define MESSAGE_LEVEL_FILE 2
#else
#define MESSAGE_LEVEL_STDOUT 2
#define MESSAGE_LEVEL_FILE 3
#endif

/* The following is fine for IEEE double precision, or anything else */
/* with at least ten bits of binary exponent. */
#define LARGE_DBL 1.e+300

#if (defined(IRIX5) || defined(IRIX6))
#define IRIX
#endif

#ifdef SUNOS4
/* Sun OS 4.1.x has some missing declarations */
#include <stdio.h>
#ifdef __cplusplus
extern "C" {
#endif
int fflush( FILE *stream);
int fclose( FILE *stream);
int tolower (int c);
long int strtol(const char *nptr, char **endptr, int base);
int printf( const char *format, ...);
int fprintf( FILE *stream, const char *format, ...);
#ifdef __cplusplus
}
#else
#include <varargs.h>
int vprintf(const char *format, va_list ap);
int vfprintf(FILE *stream, const char *format, va_list ap);
char *vsprintf(char *s, const char *format, va_list ap);
#endif
#endif

#if ((!defined(HAVE_DRAND48)) || (defined(IRIX)) || (defined(SUNOS)))
#ifdef __cplusplus
extern "C" {
#endif
double drand48(void);
void srand48(long seed);
#ifdef __cplusplus
}
#endif
#endif

#ifdef __cplusplus

#ifndef HAVE_bool_cxx
#define bool unsigned int
#define true 1
#define false 0
#endif

#else

#ifndef HAVE_bool_c
#define bool unsigned int
#define true 1
#define false 0
#endif

#endif

#if ((!defined(HAVE_SNPRINTF)) || (defined(_AIX) && !defined(__GNUG__)))
#ifdef __cplusplus
extern "C" {
#endif
#include <stdlib.h>
int snprintf ( char *str, size_t n, const char *format, ... );
#ifdef __cplusplus
}
#endif
#endif

#if defined(HAVE_ATEXIT)
/* atexit() is defined */
#define GRUMMP_AT_EXIT(a) atexit(a)
#else
#if defined(HAVE_ON_EXIT)
/* atexit() is not defined but on_exit() is.  Sun 4, for example, has */
/* no prototype for atexit(), although the function appears to exist. */
#define GRUMMP_AT_EXIT(a) on_exit(a, (void*)(0))
#else
/* neither atexit() nor on_exit() is defined */
#define GRUMMP_AT_EXIT(a)
#endif /* HAVE_ON_EXIT */
#endif /* HAVE_ATEXIT */

#if ((defined(HPUX10)) && (!defined(__GNUG__)))
/* HPUX10 native compiler pukes on inlines with loops instead of
   converting them to non-inline functions. */
#define BROKEN_INLINE
#endif

#define GRUMMP_VERSION "0.3.4"
#define GRUMMP_SERIAL 00304

#define HOST_OS "LINUX_GNU"

/* Be sure these two always get included along with config info. */
#include "GR_assert.h"
#ifdef __cplusplus
#include "GR_Classes.h"
#endif

#endif
