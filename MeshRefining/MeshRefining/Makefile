#############################################################################
# Makefile for building: MeshRefining
# Generated by qmake (1.07a) (Qt 3.3.6) on: Sat Mar 24 15:26:47 2018
# Project:  ../MeshRefining.pro
# Template: app
# Command: $(QMAKE) -o Makefile ../MeshRefining.pro
#############################################################################

####### Compiler, tools and options

CC       = mpicc #mpicc
CXX      = mpiCC #mpic++
CXXFLAGS = -O3 -Wall -g
# CFLAGS   = -pipe -Wall -W -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic  -DQT_DEPRECATED_WARNINGS -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
# CXXFLAGS = -pipe -Wall -W -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic  -DQT_DEPRECATED_WARNINGS -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
# SET SW INC PATH
INC_PATH=/home/zhengjj/MeshRefining/lib_sw
# SET LIB PATH
LIB_PATH=/home/zhengjj/MeshRefining/lib_sw
# x86
#METIS_INC=/home/zhengjj/program/metis
#CGNS_INC=/home/zhengjj/program/CGNS-master/src/cgns_build
#HDF5_INC=/home/zhengjj/hdf5
# sw
METIS_INC=${LIB_PATH}/parmetis-lib_64_64
CGNS_INC=${LIB_PATH}/CGNS-3.3.0
HDF5_INC=${LIB_PATH}/hdf5-1.8.18
# INCPATH  = -I/usr/lib64/qt-3.3/mkspecs/default -I../../MeshRefining -I../include -I../include -I/usr/lib/mpich/include -I$(QTDIR)/include -I.
#INCPATH  = -I.. -I../include -I${METIS_INC}/include -I${CGNS_INC}/include -I${HDF5_INC}/include
INCPATH  = -I.. -I${INC_PATH} -I${METIS_INC}/include -I${CGNS_INC}/include -I/home/{HDF5_INC}/include
LINK     = mpiCC #mpic++
LFLAGS   = 
# LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/public/home/zhengjj/codes/MeshRefining/lib/ -lmetis -lmpi -lqt-mt -lXext -lX11 -lm
LIBS     = -L${METIS_INC}/lib -lmetis -lm -L${CGNS_INC}/lib -lcgns -L${HDF5_INC}/lib -lhdf5  # -lXext -lX11
#LIBS     = -L${METIS_INC}/lib -lmetis -lm -L${CGNS_INC}/lib -lcgns  # -lXext -lX11
AR       = ar cqs
RANLIB   = 
# MOC      = $(QTDIR)/bin/moc
# UIC      = $(QTDIR)/bin/uic
# QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = ../globaldefine.h \
		../dataclass.h \
		../vector.h \
		../dataio.h \
		../refinefunctions.h \
		../boundary.h \
		../miscellaneous.h \
		../openfoamfile.h \
		../boundarycondition.h \
		../lookup_table.h
SOURCES = ../main.cpp \
		../dataclass.cpp \
		../vector.cpp \
		../dataio.cpp \
		../refinefunctions.cpp \
		../boundary.cpp \
		../miscellaneous.cpp \
		../openfoamfile.cpp \
		../boundarycondition.cpp
OBJECTS = main.o \
		dataclass.o \
		vector.o \
		dataio.o \
		refinefunctions.o \
		boundary.o \
		miscellaneous.o \
		openfoamfile.o \
		boundarycondition.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = ../MeshRefining.pro
QMAKE_TARGET = MeshRefining
DESTDIR  = 
TARGET   = MeshRefining

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

#Makefile: ../MeshRefining.pro  /usr/lib64/qt-3.3/mkspecs/default/qmake.conf /usr/lib64/qt-3.3/lib/libqt-mt.prl
#	$(QMAKE) -o Makefile ../MeshRefining.pro
#qmake: 
#	@$(QMAKE) -o Makefile ../MeshRefining.pro

dist: 
	@mkdir -p ../.tmp/MeshRefining && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) ../.tmp/MeshRefining/ && ( cd `dirname ../.tmp/MeshRefining` && $(TAR) MeshRefining.tar MeshRefining && $(GZIP) MeshRefining.tar ) && $(MOVE) `dirname ../.tmp/MeshRefining`/MeshRefining.tar.gz . && $(DEL_FILE) -r ../.tmp/MeshRefining

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

main.o: ../main.cpp ../dataio.h \
		../refinefunctions.h \
		../openfoamfile.h \
		../boundary.h \
		../dataclass.h \
		../globaldefine.h \
		../vector.h \
		../boundarycondition.h \
		../lookup_table.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o ../main.cpp

dataclass.o: ../dataclass.cpp ../globaldefine.h \
		../dataclass.h \
		../vector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dataclass.o ../dataclass.cpp

vector.o: ../vector.cpp ../vector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o vector.o ../vector.cpp

dataio.o: ../dataio.cpp ../dataio.h \
		../dataclass.h \
		../globaldefine.h \
		../refinefunctions.h \
		../vector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dataio.o ../dataio.cpp

refinefunctions.o: ../refinefunctions.cpp ../refinefunctions.h \
		../include/metis.h \
		../dataio.h \
		../dataclass.h \
		../globaldefine.h \
		../vector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o refinefunctions.o ../refinefunctions.cpp

boundary.o: ../boundary.cpp ../boundary.h \
		../lookup_table.h \
		../dataclass.h \
		../vector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o boundary.o ../boundary.cpp

miscellaneous.o: ../miscellaneous.cpp ../miscellaneous.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o miscellaneous.o ../miscellaneous.cpp

openfoamfile.o: ../openfoamfile.cpp ../openfoamfile.h \
		../miscellaneous.h \
		../dataclass.h \
		../boundarycondition.h \
		../vector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o openfoamfile.o ../openfoamfile.cpp

boundarycondition.o: ../boundarycondition.cpp ../boundarycondition.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o boundarycondition.o ../boundarycondition.cpp

####### Install

install:  

uninstall:  

